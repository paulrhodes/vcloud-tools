# ********* ATTENTION **********
#
# As of vCloud Director 5.1, the customization script has a size limit of
# slightly less than 2048 bytes, despite documentation to the contrary.
# Exceeding this limit will manifest as a decoding error during guest
# customisation.
#
# Therefore the size of this template when compiled is at a premium. Blank
# lines, comments, etc., will be removed by minifier.py but please remember to
# keep code at a minimum.

# See /var/log/vmware-imc/customization.log on the VM for output. -%>

<% PUPPET_VERSION = '3.1.1' -%>

set -ex

export DEBIAN_FRONTEND=noninteractive

if [ "$1" = precustomization ]; then

  echo LC_ALL=en_GB.UTF-8 >/etc/environment
  echo -n Etc/UTC >/etc/timezone
  dpkg-reconfigure tzdata

elif [ "$1" = postcustomization ]; then

  CODENAME=`lsb_release -cs`
  ENVIRONMENT=<%= facts[:environment] %>
  REPO=<% facts[:repo] -%>
  ROLE=<%= facts[:role] %>
  VDC=<%= vdc.name %>

  # Fix for multi-homed VMs.
  [ "`netstat -4nr|awk '$1=="0.0.0.0" {print $8}'`" = eth1 ] && {
    sed -e 's/eth0/ethX/;s/eth1/eth0/;s/ethX/eth1/' -i /etc/network/interfaces
    /etc/init.d/networking restart || : # NOT: service networking
  }

  (echo nameserver 8.8.8.8; echo nameserver 8.8.4.4) >/etc/resolv.conf
  apt-get -q update
  apt-get -qy install curl openssh-server unzip

  (
    cd /etc/sudoers.d
    echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' >ubuntu
    chmod 440 ubuntu
  )

  # Set up disks.
<% devices = Array('b'..'z').map {|x| "/dev/sd#{x}"} -%>
<% Array(vm_config[:disks]).each_with_index do |disk, i| -%>
<%   device = devices[i] -%>
  # Start partition at a 2048-aligned boundary.
  # http://blogs.vmware.com/vsphere/2011/08/guest-os-partition-alignment.html
  echo 2048|sfdisk -q -u S <%= device %>
<%   device = "#{device}1" -%>
  mkfs.ext4 -m 0 -O dir_index,sparse_super,uninit_bg -q <%= device %>
  mkdir -p <%= disk[:fs_file] %>
  echo '<%= device %> <%= disk[:fs_file] %> ext4 <%= disk[:fs_mntops] || 'defaults,nodiratime' %> 0 2' >>/etc/fstab
  mount <%= device %>
<% end -%>

  # Add our apt repo.
  echo deb $REPO/ $CODENAME main >/etc/apt/sources.list.d/<%= facts[:prefix] -%>.list
  wget -q -O - $REPO/pubkey.gpg|apt-key add -

  # Install a recent version of puppet from the official puppetlabs repo.
  PUPPETLABS_RELEASE=puppetlabs-release-$CODENAME.deb
  wget -q http://apt.puppetlabs.com/$PUPPETLABS_RELEASE
  dpkg -i $PUPPETLABS_RELEASE
  rm $PUPPETLABS_RELEASE
  apt-get -q update
<% debs = ['puppet-common', 'puppet'] -%>
<% debs += ['puppetmaster-common', 'puppetmaster-passenger'] if role == 'puppet' -%>
  apt-get -qy install <%= debs.map {|deb| "#{deb}=#{PUPPET_VERSION}\\*"}.join(' ') %>

  # Set initial facts.
  mkdir -p /etc/facter/facts.d
  (
    cd /etc/facter/facts.d
    echo <%= facts[:prefix] -%>_environment=$ENVIRONMENT ><%= facts[:prefix] -%>_environment.txt
    echo role=$ROLE >role.txt
    echo vdc=$VDC >vdc.txt
  )

  apt-get -qy install ida-webops

  # FIXME: make puppet work first time!
  # Yes, 3 times. Seriously.
  for i in `seq 3`; do
    FACTER_<%= facts[:prefix] -%>_environment=$ENVIRONMENT FACTER_role=$ROLE FACTER_vdc=$VDC \
      /usr/share/<%= facts[:prefix] -%>-webops/bin/apply || :
  done

fi
